AWSTemplateFormatVersion: '2010-09-09'
Description: 'This template creates a VPC and network infrastructure'

Resources:
  NewVPC:
    Description: "New Demo VPC"
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: yes
      EnableDnsSupport: yes
      Tags: 
        - Key: Name
          Value: New_VPC
  SubnetOne:
    Description: "Subnet for New_VPC"
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref NewVPC
      CidrBlock: 10.0.10.0/24
      AvailabilityZone: "us-east-1a"
      Tags:
        - Key: Name
          Value: Subnet_One 
      MapPublicIpOnLaunch: true 
  SubnetTwo:
    Description: "Subnet for New_VPC"
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref NewVPC
      CidrBlock: 10.0.11.0/24
      AvailabilityZone: "us-east-1c"
      Tags:
        - Key: Name
          Value: Subnet_Two
      MapPublicIpOnLaunch: true
  PublicNACL:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref NewVPC
      Tags:
        - Key: Name
          Value: Public_NACL
  PrivateNACL:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref NewVPC
      Tags:
        - Key: Name
          Value: Private_NACL
  PublicInboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicNACL
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
  PublicOutboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PublicNACL
      RuleNumber: 99
      Protocol: -1
      Egress: true
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
  PrivateInboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PrivateNACL
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
  PrivateOutboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref PrivateNACL
      RuleNumber: 99
      Protocol: -1
      Egress: true
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
  PublicSubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref SubnetOne
      NetworkAclId: !Ref PublicNACL
  PrivateSubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref SubnetTwo
      NetworkAclId: !Ref PrivateNACL
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: NewVPC
      Tags:
        - Key: Name
          Value: PublicRtb
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: NewVPC
      Tags:
        - Key: Name
          Value: PrivateRtb
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetOne
      RouteTableId: !Ref PublicRouteTable
  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetTwo
      RouteTableId: !Ref PrivateRouteTable
  myInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: New_igw
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref NewVPC
      InternetGatewayId: !Ref myInternetGateway
  Route:
    Type: AWS::EC2::Route
    DependsOn: myInternetGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref myInternetGateway
  PublicSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for Public Subnet
      VpcId: !Ref NewVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 102.244.223.149/32
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: Public_sg
  PrivateSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for Public Subnet
      VpcId: !Ref NewVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
          Description: Open http to the world
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: Private_sg
  InboundRuleOne:
      Type: AWS::EC2::SecurityGroupIngress
      Properties:
        IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        SourceSecurityGroupId: !GetAtt PublicSecurityGroup.GroupId
        GroupId:
          Fn::GetAtt:
            - PrivateSecurityGroup
            - GroupId
  
Outputs:
  VPCId:
    Description: This is the VPC ID
    Value: !Ref NewVPC
    Export:
      Name: !Sub '${AWS::StackName}-VPCID'
  PublicSubnet:
    Description: Public Subnet ID
    Value: !Ref SubnetOne
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnet'
  PrivateSubnet:
    Description: Private Subnet ID
    Value: !Ref SubnetTwo
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnet'
  PublicSG:
    Description: Security group for public subnet resources
    Value: !GetAtt PublicSecurityGroup.GroupId
    Export:
      Name: !Sub '${AWS::StackName}-PublicSG'
  PrivateSG:
    Description: Security group for private subnet resources
    Value: !GetAtt PrivateSecurityGroup.GroupId
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSG'